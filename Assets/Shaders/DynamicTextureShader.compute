// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

RWTexture2D<float4> Result;
uniform float t;
uniform Texture2D<float4> palette;

[numthreads(32,32,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float2 z = float2(((1.0 / 512) * id.x) - 0.5,((1.0 / 512) * id.y) - 0.5);

    // Change this for different patterns
	float2 c = float2(-0.18453326967811071, cos(t / 10.0));
    
	int i;
    for(i = 0; i < 100; i++)
	{
        float x = (z.x * z.x - z.y * z.y) + c.x;
        float y = (z.y * z.x + z.x * z.y) + c.y;
        if((x * x + y * y) > 4.0f) break;
        z.x = x;
        z.y = y;
    }

	uint2 temp;
	if(i == 0)
		temp = uint2(0, 0);
	else
		temp = uint2(i % 256, 0);
    Result[id.xy] = palette[temp];
}





